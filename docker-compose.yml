version: '3.8'

services:
  database:
    image: postgres:14-alpine
    container_name: logistica-db
    environment:
      POSTGRES_DB: logistica_pedidos
      POSTGRES_USER: logistica_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U logistica_user -d logistica_pedidos"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - logistica-network

  backend:
    build: .
    container_name: logistica-app
    environment:
      DB_HOST: database
      DB_USERNAME: logistica_user
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: production
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - logistica-network

networks:
  logistica-network:
    driver: bridge

volumes:
  postgres_data:
